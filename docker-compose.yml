version: '2'

# Prerequisite: named volumes "nvpostgisdata" and "nvtiles" must be created.
# To list all the docker volumes:
# docker volume ls
#
# To create the named volumes:
# docker volume create --name nvpostgisdata -d local
# docker volume create --name nvtiles -d local
#
# To prepare db:
# docker-compose run --rm app-osm initdb
#
# To import "bretagne-latest.osm.pbf" into db:
# docker-compose run --rm app-osm import
#
# To start all services (start populated postgis database, start renderd, start apache):
# docker-compose up -d
#
# To remove named volume (only if necessary):
# docker volume rm nvpostgisdata
# docker volume rm nvtiles
services:
  app-osm:
    build: .
    image: zavpyj/osm-tiles
    volumes:
      # keep postgresql database files on host in named volume "nvpostgisdata":
      - nvpostgisdata:/var/lib/postgresql
      # keep OSM tiles on host in named volume "nvtiles":
      - nvtiles:/var/lib/mod_tile
      # mount OSM data file from host into Docker container
      - /tmp/central-america-latest.osm.pbf:/tmp/import.osm.pbf
    environment:
      OSM_IMPORT_FILE: '/tmp/import.osm.pbf'
      OSM_IMPORT_CACHE: '8192'
      OSM_RENDER_MIN_ZOOM: '11'
      OSM_RENDER_MAX_ZOOM: '18'
      OSM_RENDER_THREADS: 4
      OSM_RENDER_X_MIN: -61.705
      OSM_RENDER_X_MAX: -60.712
      OSM_RENDER_Y_MIN: 12.568
      OSM_RENDER_Y_MAX: 13.626
      # To restrict acces according to specific keys in QUERY_STRING
      #  (in URLs like http://osmserver_hostname:osmserver_port/osm_tiles/{z}/{x}/{y}.png?keyId=abcdefghijklmnopqrstuvwxyz1234567890 - see sample file "test_with_keyId.html"),
      #  use OSM_WEB_AUTHORIZED_IDS (multiple values must be pipe ('|') separated):
      #OSM_WEB_AUTHORIZED_IDS: 'abcdefghijklmnopqrstuvwxyz1234567890|another_id'
      # To restrict acces according to specific HTTP REFERERS, use OSM_WEB_AUTHORIZED_REFERERS (multiple values must be pipe ('|') separated):
      #OSM_WEB_AUTHORIZED_REFERERS: 'www.example.com|www.example2.com'
    ports:
      - '80:80'
    command: 'startservices'
volumes:
  nvpostgisdata:
    external: true
  nvtiles:
    external: true
